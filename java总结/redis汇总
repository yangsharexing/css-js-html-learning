##############################第一部分：应用基础##################################
1、Redis允许的value数据结构类型有5种：String（字符串）、List（列表）、Set（集合）、Hash（哈希）、Zset（有序集合）。
2、https://www.cnblogs.com/alunchen/p/9836170.html





##############################第二部分：部署基础##################################
参考：https://blog.csdn.net/e3002/article/details/100691472
参考：https://www.cnblogs.com/markLogZhu/p/11418884.html（必看）
参考：https://www.cnblogs.com/shiw27/p/8360485.html
参考：https://blog.csdn.net/qq_30038111/article/details/80758127
redis有三种部署方式：
    1、单机：
    2、主从（一个master可以有多个slaves）：
    3、sentinel模式（哨兵）：
    4、cluster(集群模式)

主从细节点：
1、默认配置下，master节点可以进行读和写，slave节点只能进行读操作，写操作被禁止
2、不要修改配置让slave节点支持写操作，没有意义，原因一，写入的数据不会被同步到其他节点；
3、原因二，当master节点修改同一条数据后，slave节点的数据会被覆盖掉
4、slave节点挂了不影响其他slave节点的读和master节点的读和写，重新启动后会将数据从master节点同步过来
5、master节点挂了以后，不影响slave节点的读，Redis将不再提供写服务，master节点启动后Redis将重新对外提供写服务。
6、master节点挂了以后，不会slave节点重新选一个master
7、(缺点)master节点挂了以后，redis就不能对外提供写服务了，因为剩下的slave不能成为master

sentinel模式特点：
1、sentinel模式是建立在主从模式的基础上，如果只有一个Redis节点，sentinel就没有任何意义
2、当master节点挂了以后，sentinel会在slave中选择一个做为master，并修改它们的配置文件，其他slave的配置文件也会被修改，比如slaveof属性会指向新的master
3、当master节点重新启动后，它将不再是master而是做为slave接收新的master节点的同步数据
4、sentinel因为也是一个进程有挂掉的可能，所以sentinel也会启动多个形成一个sentinel集群
5、一个sentinel或sentinel集群可以管理多个主从Redis。
6、sentinel最好不要和Redis部署在同一台机器，不然Redis的服务器挂了以后，sentinel也挂了
7、sentinel监控的Redis集群都会定义一个master名字，这个名字代表Redis集群的master Redis
8、当使用sentinel模式的时候，客户端就不要直接连接Redis，而是连接sentinel的ip和port，由sentinel来提供具体的可提供服务的Redis实现，这样当master节点挂掉以后，sentinel就会感知并将新的master节点提供给使用者
9、sentinel模式基本可以满足一般生产的需求，具备高可用性。但是当数据量过大到一台服务器存放不下的情况时，主从模式或sentinel模式就不能满足需求了，这个时候需要对存储的数据进行分片，将数据存储到多个Redis实例中，就是下面要讲的。

cluster模式特点：
1、cluster的出现是为了解决单机Redis容量有限的问题，将Redis的数据根据一定的规则分配到多台机器
2、cluster可以说是sentinel和主从模式的结合体，通过cluster可以实现主从和master重选功能，所以如果配置两个副本三个分片的话，就需要六个Redis实例。
3、因为Redis的数据是根据一定规则分配到cluster的不同机器的，当数据量过大时，可以新增机器进行扩容，这种模式适合数据量巨大的缓存要求，当数据量不是很大使用sentinel即可